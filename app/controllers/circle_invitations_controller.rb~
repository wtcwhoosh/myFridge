class CircleInvitationsController < ApplicationController
  before_action :set_circle_invitation, only: [:show, :edit, :update, :destroy]

  # GET /circle_invitations
  def index
    @circle_invitations = CircleInvitation.all
  end

  # GET /circle_invitations/1
  def show
  end

  # GET /circle_invitations/new
  def new
    @circle_invitation = CircleInvitation.new
  end

  # GET /circle_invitations/1/edit
  def edit
  end

  # POST /circle_invitations
  def create
    @circle_invitation = CircleInvitation.new(circle_invitation_params)

    if @circle_invitation.save
      redirect_to @circle_invitation, notice: 'Circle invitation was successfully created.'
    else
      render action: 'new'
    end
  end

  # PATCH/PUT /circle_invitations/1
  def update
    if @circle_invitation.update(circle_invitation_params)
      redirect_to @circle_invitation, notice: 'Circle invitation was successfully updated.'
    else
      render action: 'edit'
    end
  end

  # DELETE /circle_invitations/1
  def destroy
    @circle_invitation.destroy
    redirect_to circle_invitations_url, notice: 'Circle invitation was successfully destroyed.'
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_circle_invitation
      @circle_invitation = CircleInvitation.find(params[:id])
    end

    # Only allow a trusted parameter "white list" through.
    def circle_invitation_params
      params.require(:circle_invitation).permit(:circle_id, :invitation_id)
    end
end
